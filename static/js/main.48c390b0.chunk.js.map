{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","placeholder","placeHolder","onChange","changeHandler","App","e","setState","searchField","target","value","console","log","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,YAAM,SAAAC,GAAK,OACpB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCJTC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SAA4BD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAK,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCFrEM,G,MAAY,SAAAX,GAAK,OAC1B,uBAAOC,UAAU,SAASW,KAAK,SAASC,YAAab,EAAMc,YAAaC,SAAUf,EAAMgB,kBCiC7EC,E,kDA7Bb,aAAe,IAAD,8BACZ,gBAMJD,cAAgB,SAAAE,GAEd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,QAAO,kBAAIC,QAAQC,IAAI,EAAKC,MAAML,iBAPpE,EAAKK,MAAO,CACVhB,SAAS,GACTW,YAAY,IAJF,E,gEAWK,IAAD,OAClBM,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAE,EAAKX,SAAS,CAACV,SAASqB,S,+BAE9B,IAAD,EACsBC,KAAKN,MAA3BhB,EADA,EACAA,SAASW,EADT,EACSA,YACTY,EAAmBvB,EAASwB,QAAO,SAAA7B,GAAO,OAAEA,EAAQE,KAAK4B,cAAcC,SAASf,EAAYc,kBAClG,OACM,sBAAKjC,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CAAWa,YAAY,kBAAkBE,cAAee,KAAKf,gBAE7D,cAAC,EAAD,CAAUP,SAAUuB,W,GA3BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.48c390b0.chunk.js","sourcesContent":["/* eslint-disable no-template-curly-in-string */\r\nimport React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card= props => (\r\n    <div className=\"card-container\">\r\n    <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = props => (\r\n    <div className=\"card-list\">{props.monsters.map(monster => (<Card key={monster.id} monster={monster}></Card>))}</div>\r\n);","import React from \"react\";\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = props => (\r\n    <input className='search' type='search' placeholder={props.placeHolder} onChange={props.changeHandler}/>\r\n);","import React, {Component} from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n\n  // eslint-disable-next-line no-useless-constructor\n  constructor() {\n    super();\n    this.state ={\n      monsters:[],\n      searchField:''\n    };\n  }\nchangeHandler = e=>\n{\n  this.setState({searchField:e.target.value},()=>console.log(this.state.searchField))\n}\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users=>this.setState({monsters:users}));\n}\nrender(){\n  const{monsters,searchField}=this.state;\n  const filteredMonsters = monsters.filter(monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()));\n  return(\n        <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeHolder='Search monsters' changeHandler={this.changeHandler}\n      />\n        <CardList monsters={filteredMonsters}/>\n        </div>\n      );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}